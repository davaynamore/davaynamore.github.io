(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var _storageHelper = _interopRequireDefault(require("./storageHelper"));

var _fetch = _interopRequireDefault(require("./fetch"));

var _render = require("./render");

var _cart = require("./cart");

var _modal = require("./modal");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var productsReadyEventName = 'products_ready';
var productsReadyEvent = new Event(productsReadyEventName);
var cartForm = document.querySelector('.modal__form');
(0, _fetch["default"])('https://my-json-server.typicode.com/davaynamore/fakeserver/db').then(function (response) {
  if (response.status !== 200) {
    console.log("Looks like there was a problem. Status Code: ".concat(response.status));
    return;
  }

  response.json().then(function (_ref) {
    var products = _ref.products;

    _storageHelper["default"].set('products', products);

    document.dispatchEvent(productsReadyEvent);
  });
})["catch"](function (err) {
  console.log('Fetch Error :-S', err);
});
document.addEventListener('click', function (event) {
  var target = event.target;

  if (target.classList.contains('add-to-cart')) {
    (0, _cart.addToCartHandler)(target);
    (0, _render.renderSuccessMsg)();
  }

  if (target.classList.contains('cart')) {
    (0, _modal.modalOpenHandler)();
    (0, _render.renderCart)((0, _cart.getCartItems)((0, _cart.getCartValue)(), _storageHelper["default"].get('products')));
  }

  if (target.classList.contains('modal__close')) {
    (0, _modal.modalCloseHandler)();
  }

  if (target.classList.contains('clear-btn')) {
    _storageHelper["default"].set('cart', {});

    (0, _render.renderCart)([]);
    (0, _cart.getCartValue)();
  }

  if (target.classList.contains('submit-btn')) {
    event.preventDefault();
  }

  if (target.classList.contains('cart-list__item-remove')) {
    event.preventDefault();
    (0, _cart.removeProductFromCart)(target);
    (0, _render.renderCart)((0, _cart.getCartItems)((0, _cart.getCartValue)(), _storageHelper["default"].get('products')));
  }
});
document.addEventListener(productsReadyEventName, function () {
  var loader = document.querySelector('#cube-loader');
  (0, _render.renderProducts)(_storageHelper["default"].get('products'));
  (0, _cart.getCartValue)();
  loader.classList.add('hidden');
});
cartForm.addEventListener('change', function (event) {
  (0, _cart.changeProductQuantity)(event.target);
  (0, _render.renderCart)((0, _cart.getCartItems)((0, _cart.getCartValue)(), _storageHelper["default"].get('products')));
});

},{"./cart":2,"./fetch":3,"./modal":4,"./render":5,"./storageHelper":6}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getTotalSum = exports.removeProductFromCart = exports.changeProductQuantity = exports.removeFromCartHandler = exports.addToCartHandler = exports.getCartItems = exports.getCartValue = void 0;

var _storageHelper = _interopRequireDefault(require("./storageHelper"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var getCartValue = function getCartValue() {
  var label = document.querySelector('.cart__label');

  var cartValue = _storageHelper["default"].get('cart');

  if (!cartValue || !Object.keys(cartValue).length) {
    label.innerText = 0;
    return {};
  }

  label.innerText = Object.values(cartValue).reduce(function (acc, cur) {
    return +acc + +cur;
  });
  return cartValue;
};

exports.getCartValue = getCartValue;

var getCartItems = function getCartItems(cartValue, products) {
  return Object.keys(cartValue).map(function (id) {
    return products.filter(function (product) {
      if (product.id == id) {
        product.total = cartValue[id];
        return product;
      }
    })[0];
  });
};

exports.getCartItems = getCartItems;

var addToCartHandler = function addToCartHandler(target) {
  var cart = getCartValue();
  var productId = target.getAttribute('data-id');

  var productsList = _storageHelper["default"].get('products');

  var chosenProduct = productsList.filter(function (element) {
    return element.id == productId;
  })[0];

  if (cart[chosenProduct.id]) {
    cart[chosenProduct.id]++;
  } else {
    cart[chosenProduct.id] = 1;
  }

  _storageHelper["default"].set('cart', cart);

  getCartValue();
};

exports.addToCartHandler = addToCartHandler;

var removeFromCartHandler = function removeFromCartHandler(target) {
  var cart = getCartValue();
  var productId = target.getAttribute('data-id');

  var productsList = _storageHelper["default"].get('products');

  var chosenProduct = productsList.filter(function (element) {
    return element.id == productId;
  })[0];

  if (cart[chosenProduct.id] && cart[chosenProduct.id] > 0) {
    cart[chosenProduct.id]--;
  } else {
    cart[chosenProduct.id] = 0;
  }

  _storageHelper["default"].set('cart', cart);

  getCartValue();
};

exports.removeFromCartHandler = removeFromCartHandler;

var changeProductQuantity = function changeProductQuantity(target) {
  var newQuantity = +target.value < 1 ? 1 : +target.value;
  var productId = target.attributes['data-id'].value;
  var cart = getCartValue();

  var productsList = _storageHelper["default"].get('products');

  var chosenProduct = productsList.filter(function (element) {
    return element.id == productId;
  })[0];

  if (cart[chosenProduct.id]) {
    cart[chosenProduct.id] = newQuantity;
  }

  _storageHelper["default"].set('cart', cart);

  getCartValue();
};

exports.changeProductQuantity = changeProductQuantity;

var removeProductFromCart = function removeProductFromCart(target) {
  var cart = getCartValue();
  var productId = target.getAttribute('data-id');
  delete cart[productId];

  _storageHelper["default"].set('cart', cart);
};

exports.removeProductFromCart = removeProductFromCart;

var getTotalSum = function getTotalSum() {
  return getCartItems(getCartValue(), _storageHelper["default"].get('products')).map(function (product) {
    return +product.price * +product.total;
  }).reduce(function (acc, cur) {
    return acc + cur;
  });
};

exports.getTotalSum = getTotalSum;

},{"./storageHelper":6}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var getProducts = function getProducts(url) {
  return fetch(url);
};

var _default = getProducts;
exports["default"] = _default;

},{}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.modalCloseHandler = exports.modalOpenHandler = void 0;

var _cart = require("./cart");

var modal = document.querySelector('.modal');

var modalOpenHandler = function modalOpenHandler() {
  modal.classList.add('open');
};

exports.modalOpenHandler = modalOpenHandler;

var modalCloseHandler = function modalCloseHandler() {
  modal.classList.remove('open');
};

exports.modalCloseHandler = modalCloseHandler;

},{"./cart":2}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.renderSuccessMsg = exports.renderCart = exports.renderProducts = void 0;

var _cart = require("./cart");

var generateElement = function generateElement(tagName) {
  var className = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  var el = document.createElement(tagName);

  if (className) {
    el.classList.add(className);
  }

  return el;
};

var insertElementIntoParent = function insertElementIntoParent(elements, parentElement) {
  elements.forEach(function (element) {
    parentElement.appendChild(element);
  });
};

var createProductItem = function createProductItem(_ref) {
  var currency = _ref.currency,
      description = _ref.description,
      id = _ref.id,
      img_url = _ref.img_url,
      price = _ref.price,
      title = _ref.title;
  var col = generateElement('div', 'col-4');
  var productGrid = generateElement('div', 'product-grid');
  var productImageWrap = generateElement('div', 'product-image');
  var imageWrapper = generateElement('div', 'image-wrapper');
  var productImage = generateElement('img', 'pic-1');
  var productNewLabel = generateElement('span', 'product-new-label');
  var productDiscountLabel = generateElement('span', 'product-discount-label');
  var productDescription = generateElement('p', 'product-description');
  var productContent = generateElement('div', 'product-content');
  var productTitle = generateElement('h3', 'title');
  var productPrice = generateElement('div', 'price');
  var addToCart = generateElement('button', 'add-to-cart');
  productNewLabel.innerText = 'Sale';
  addToCart.innerText = '+ Add To Cart';
  productDiscountLabel.innerText = '20%';
  productImage.setAttribute('src', img_url);
  addToCart.setAttribute('data-id', id);
  addToCart.classList.add('btn');
  addToCart.classList.add('btn-success');
  productTitle.innerText = title;
  productPrice.innerText = currency + price;
  col.appendChild(productGrid);
  imageWrapper.appendChild(productImage);
  var wrappedGrid = [productImageWrap, productDescription, productContent];
  var wrappedImageWrap = [imageWrapper, productNewLabel, productDiscountLabel];
  var wrappedContent = [productTitle, productPrice, addToCart];
  insertElementIntoParent(wrappedGrid, productGrid);
  insertElementIntoParent(wrappedImageWrap, productImageWrap);
  insertElementIntoParent(wrappedContent, productContent);
  return col;
};

var createCartItem = function createCartItem(_ref2) {
  var id = _ref2.id,
      title = _ref2.title,
      img_url = _ref2.img_url,
      price = _ref2.price,
      currency = _ref2.currency,
      total = _ref2.total;
  var listItem = generateElement('li');
  var productItem = generateElement('div', 'cart-list__item');
  var productArticul = generateElement('input');
  var imgWrapper = generateElement('div', 'cart-list__img-wrapper');
  var productImg = generateElement('img', 'cart-list__item-img');
  var productTitle = generateElement('h4', 'cart-list__item-title');
  var productPrice = generateElement('span', 'cart-list__item-price');
  var productQuantity = generateElement('input', 'cart-list__item-quantity');
  var productTotalPrice = generateElement('span', 'cart-list__item-total');
  var productRemove = generateElement('button', 'cart-list__item-remove');
  productArticul.setAttribute('type', 'hidden');
  productArticul.setAttribute('name', 'articul');
  productArticul.setAttribute('value', id);
  productImg.setAttribute('src', img_url);
  productQuantity.setAttribute('data-id', id);
  productRemove.setAttribute('data-id', id);
  productQuantity.setAttribute('type', 'number');
  productQuantity.setAttribute('name', 'quantity');
  productQuantity.setAttribute('value', total);
  productTitle.innerText = title;
  productPrice.innerText = currency + price;
  productTotalPrice.innerText = "".concat(currency).concat(+price * +total);
  productRemove.innerText = '-';
  var wrappedProductItems = [productArticul, imgWrapper, productTitle, productPrice, productQuantity, productTotalPrice, productRemove];
  insertElementIntoParent(wrappedProductItems, productItem);
  imgWrapper.appendChild(productImg);
  listItem.appendChild(productItem);
  return listItem;
};

var renderProducts = function renderProducts(products) {
  var grid = document.getElementById('productsGrid');
  products.forEach(function (product) {
    grid.appendChild(createProductItem(product));
  });
};

exports.renderProducts = renderProducts;

var renderCart = function renderCart(products) {
  var grid = document.querySelector('.cart-list');
  var emptyMsg = document.querySelector('.cart__empty');
  var total = document.querySelector('.cart__total');

  while (grid.firstChild) {
    grid.removeChild(grid.firstChild);
  }

  if (!products.length) {
    return grid.classList.add('empty-list');
  } else {
    grid.classList.remove('empty-list');
  }

  var currency;
  products.forEach(function (product) {
    currency = product.currency;
    grid.appendChild(createCartItem(product));
  });
  total.innerText = "Total: ".concat(currency).concat((0, _cart.getTotalSum)());
};

exports.renderCart = renderCart;

var renderSuccessMsg = function renderSuccessMsg() {
  var span = generateElement('span', 'success-msg');
  span.classList.add('badge');
  span.classList.add('badge-success');
  span.innerText = 'Added to cart';
  document.body.appendChild(span);
  setTimeout(function () {
    document.body.removeChild(span);
  }, 2500);
};

exports.renderSuccessMsg = renderSuccessMsg;

},{"./cart":2}],6:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

function StorageHelper() {
  this.storage = localStorage;

  this.get = function (key) {
    return JSON.parse(localStorage.getItem(key));
  };

  this.set = function (key, value) {
    localStorage.setItem(key, JSON.stringify(value));
  };

  this.remove = function (key) {
    localStorage.removeItem(key);
  };
}

var Storage = new StorageHelper();
var _default = Storage;
exports["default"] = _default;

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
