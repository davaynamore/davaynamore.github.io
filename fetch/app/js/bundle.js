(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var eventName = 'products_ready';
var event = new Event(eventName);
var loader = document.querySelector('#cube-loader');
var modal = document.querySelector('.modal');

function StorageHelper() {
  this.storage = localStorage;

  this.get = function (key) {
    return JSON.parse(localStorage.getItem(key));
  };

  this.set = function (key, value) {
    localStorage.setItem(key, JSON.stringify(value));
  };

  this.remove = function (key) {
    localStorage.removeItem(key);
  };
}

var Storage = new StorageHelper();

var getCartValue = function getCartValue() {
  var label = document.querySelector('.cart__label');
  var cartValue = Storage.get('cart');

  if (!cartValue) {
    label.innerText = 0;
    return {};
  }

  var valuesSum = Object.values(cartValue).reduce(function (acc, cur) {
    return acc + cur;
  });
  label.innerText = valuesSum;
  return cartValue;
};

var cart = getCartValue();

var getProducts = function getProducts(url) {
  return fetch(url);
};

getProducts('https://my-json-server.typicode.com/davaynamore/fakeserver/db').then(function (response) {
  if (response.status !== 200) {
    console.log("Looks like there was a problem. Status Code: ".concat(response.status));
    return;
  }

  response.json().then(function (_ref) {
    var products = _ref.products;
    Storage.set('products', products);
    document.dispatchEvent(event);
  });
})["catch"](function (err) {
  console.log('Fetch Error :-S', err);
});

var generateElement = function generateElement(tagName) {
  var className = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  var el = document.createElement(tagName);

  if (className) {
    el.classList.add(className);
  }

  return el;
};

var insertElementIntoParent = function insertElementIntoParent(elements, parentElement) {
  elements.forEach(function (element) {
    parentElement.appendChild(element);
  });
};

var createProductItem = function createProductItem(product) {
  var currency = product.currency,
      description = product.description,
      id = product.id,
      img_url = product.img_url,
      price = product.price,
      title = product.title;
  var col = generateElement('div', 'col-4');
  var productGrid = generateElement('div', 'product-grid');
  var productImageWrap = generateElement('div', 'product-image');
  var imageWrapper = generateElement('div', 'image-wrapper');
  var productImage = generateElement('img', 'pic-1');
  var productNewLabel = generateElement('span', 'product-new-label');
  var productDiscountLabel = generateElement('span', 'product-discount-label');
  var productDescription = generateElement('p', 'product-description');
  var productContent = generateElement('div', 'product-content');
  var productTitle = generateElement('h3', 'title');
  var productPrice = generateElement('div', 'price');
  var productCurrency = generateElement('span', 'currency');
  var addToCart = generateElement('button', 'add-to-cart');
  productNewLabel.innerText = 'Sale';
  addToCart.innerText = '+ Add To Cart';
  productDiscountLabel.innerText = '20%';
  productImage.setAttribute('src', img_url);
  addToCart.setAttribute('data-id', id);
  productTitle.innerText = title;
  productCurrency.innerText = currency;
  productPrice.innerText = price;
  col.appendChild(productGrid);
  imageWrapper.appendChild(productImage);
  productPrice.appendChild(productCurrency);
  var wrappedGrid = [productImageWrap, productDescription, productContent];
  var wrappedImageWrap = [imageWrapper, productNewLabel, productDiscountLabel];
  var wrappedContent = [productTitle, productPrice, addToCart];
  insertElementIntoParent(wrappedGrid, productGrid);
  insertElementIntoParent(wrappedImageWrap, productImageWrap);
  insertElementIntoParent(wrappedContent, productContent);
  return col;
};

var createCartItem = function createCartItem(_ref2) {
  var id = _ref2.id,
      title = _ref2.title,
      img_url = _ref2.img_url,
      price = _ref2.price,
      currency = _ref2.currency,
      total = _ref2.total;
  var listItem = generateElement('li');
  var productItem = generateElement('div', 'cart-list__item');
  var productArticul = generateElement('input');
  var imgWrapper = generateElement('div', 'cart-list__img-wrapper');
  var productImg = generateElement('img', 'cart-list__item-img');
  var productTitle = generateElement('h4', 'cart-list__item-title');
  var productPrice = generateElement('span', 'cart-list__item-price');
  var productCurrency = generateElement('span', 'cart-list__item-currency');
  var productQuantity = generateElement('input', 'cart-list__item-quantity');
  var productTotalPrice = generateElement('span', 'cart-list__item-total');
  productArticul.setAttribute('type', 'hidden');
  productArticul.setAttribute('name', 'articul');
  productArticul.setAttribute('value', id);
  productImg.setAttribute('src', img_url);
  productQuantity.setAttribute('type', 'number');
  productQuantity.setAttribute('name', 'quantity');
  productQuantity.setAttribute('value', total);
  productTitle.innerText = title;
  productCurrency.innerText = currency;
  productPrice.innerText = price;
  productTotalPrice.innerText = +price * +total;
  var wrappedProductItems = [productArticul, imgWrapper, productTitle, productPrice, productQuantity, productTotalPrice];
  insertElementIntoParent(wrappedProductItems, productItem);
  imgWrapper.appendChild(productImg);
  productPrice.appendChild(productCurrency);
  listItem.appendChild(productItem);
  return listItem;
};

var renderCartItems = function renderCartItems(cart, products) {
  var productsId = Object.keys(cart);
  var chosenProducts = productsId.map(function (id) {
    return products.filter(function (product) {
      if (product.id == id) {
        product.total = cart[id];
        return product;
      }
    })[0];
  });
};

var renderProducts = function renderProducts(products) {
  var grid = document.getElementById('productsGrid');
  products.forEach(function (product) {
    grid.appendChild(createProductItem(product));
  });
};

var renderCartProducts = function renderCartProducts(products) {
  var grid = document.querySelector('.cart-list');
  products.forEach(function (product) {
    grid.appendChild(createCartItem(product));
  });
};

document.addEventListener(eventName, function () {
  var products = Storage.get('products');
  renderProducts(products);
  loader.classList.add('hidden');
  getCartValue();
});

var addToCartHandler = function addToCartHandler(target) {
  var productId = target.getAttribute('data-id');
  var productsList = Storage.get('products');
  var chosenProduct = productsList.filter(function (element) {
    return element.id == productId;
  })[0];

  if (cart[chosenProduct.id]) {
    cart[chosenProduct.id]++;
  } else {
    cart[chosenProduct.id] = 1;
  }

  Storage.set('cart', cart);
  getCartValue();
};

var modalOpenHandler = function modalOpenHandler() {
  modal.classList.add('open');
  renderCartProducts(Storage.get('products'));
};

var modalCloseHandler = function modalCloseHandler() {
  modal.classList.remove('open');
};

document.addEventListener('click', function (event) {
  var target = event.target;

  if (target.classList.contains('add-to-cart')) {
    addToCartHandler(target);
  }

  if (target.classList.contains('cart')) {
    modalOpenHandler();
  }

  if (target.classList.contains('modal__close')) {
    modalCloseHandler();
  }
});

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
